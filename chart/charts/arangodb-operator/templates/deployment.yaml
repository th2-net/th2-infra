---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: arango-deployment-operator
    {{- if .Values.namespace }}
    namespace: {{ .Values.namespace }}
    {{- else }}
    namespace: {{ .Release.Namespace }}
    {{- end }}
    labels:
        app.kubernetes.io/name: kube-arangodb
        helm.sh/chart: kube-arangodb-1.2.20
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/instance: deployment
        release: deployment
spec:
    replicas: 1
    strategy:
        type: Recreate
        
    selector:
        matchLabels:
            app.kubernetes.io/name: kube-arangodb
            app.kubernetes.io/managed-by: Tiller
            app.kubernetes.io/instance: deployment
            release: deployment
    template:
        metadata:
            labels:
                app.kubernetes.io/name: kube-arangodb
                helm.sh/chart: kube-arangodb-1.2.20
                app.kubernetes.io/managed-by: Tiller
                app.kubernetes.io/instance: deployment
                release: deployment
        spec:
            serviceAccountName: arango-deployment-operator
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                    - matchExpressions:
                        - key: kubernetes.io/arch
                          operator: In
                          values:
                          - "amd64"
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    podAffinityTerm:
                      topologyKey: "kubernetes.io/hostname"
                      labelSelector:
                        matchExpressions:
                          - key: app.kubernetes.io/name
                            operator: In
                            values:
                              - kube-arangodb
                          - key: app.kubernetes.io/instance
                            operator: In
                            values:
                              - deployment
            hostNetwork: false
            hostPID: false
            hostIPC: false
            securityContext:
                runAsNonRoot: true
                runAsUser: 1000
            containers:
                - name: operator
                  imagePullPolicy: Always
                  image: arangodb/kube-arangodb:1.2.20
                  args:
                    - --scope=legacy
                    - --operator.deployment
                    - --chaos.allowed=false
                  env:
                      - name: MY_POD_NAMESPACE
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.namespace
                      - name: MY_POD_NAME
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.name
                      - name: MY_POD_IP
                        valueFrom:
                            fieldRef:
                                fieldPath: status.podIP
                      - name: RELATED_IMAGE_UBI
                        value: "alpine:3.11"
                      - name: RELATED_IMAGE_METRICSEXPORTER
                        value: "arangodb/arangodb-exporter:0.1.7"
                      - name: RELATED_IMAGE_DATABASE
                        value: "arangodb/arangodb:latest"
                  ports:
                      - name: metrics
                        containerPort: 8528
                  securityContext:
                      privileged: false
                      allowPrivilegeEscalation: false
                      readOnlyRootFilesystem: true
                      capabilities:
                          drop:
                              - 'ALL'
                  livenessProbe:
                      httpGet:
                          path: /health
                          port: 8528
                          scheme: HTTPS
                      initialDelaySeconds: 5
                      periodSeconds: 10
                  readinessProbe:
                      httpGet:
                          path: /ready
                          port: 8528
                          scheme: HTTPS
                      initialDelaySeconds: 5
                      periodSeconds: 10
            tolerations:
                - key: "node.kubernetes.io/unreachable"
                  operator: "Exists"
                  effect: "NoExecute"
                  tolerationSeconds: 5
                - key: "node.kubernetes.io/not-ready"
                  operator: "Exists"
                  effect: "NoExecute"
                  tolerationSeconds: 5
