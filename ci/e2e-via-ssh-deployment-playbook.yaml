---
- hosts: localhost
  gather_facts: false
  connection: local
  name: th2 deployment
  vars:
    infra_namespace: "{{ lookup('env', 'INFRA_NAMESPACE') | default ('service', True) }}"
    monitoring_namespace: "{{ lookup('env', 'MONITORING_NAMESPACE') | default ('monitoring', True) }}"
    repository_url: "{{ lookup('env', 'REPOSITORY_URL') }}"
    repository_ref: "{{ lookup('env', 'REPOSITORY_REF_NAME') }}"

  tasks:
    - name: Add helm repositories
      community.kubernetes.helm_repository:
        name: "{{ item.key }}"
        repo_url: "{{ item.value }}"
      with_dict:
        ingress-nginx: https://kubernetes.github.io/ingress-nginx
        loki: https://grafana.github.io/loki/charts
        stable: https://charts.helm.sh/stable      

    - name: Ensure k8s namespaces exist
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ monitoring_namespace }}"
        - "{{ infra_namespace }}"

    - name: Deploy ingress-nginx controller
      kubernetes.core.helm:
        name: ingress
        chart_ref: ingress-nginx/ingress-nginx
        chart_version: 3.12.0
        release_namespace: "{{ infra_namespace }}"
        values_files: "{{ playbook_dir }}/../example-values/ingress.values.yaml"
        create_namespace: true
        wait: true

    - name: Mocking prometheus operator
      kubernetes.core.k8s:
        state: present
        template: "{{ playbook_dir }}/deploy/crd-servicemonitor.yaml"

    - name: Mocking prometheus rules
      kubernetes.core.k8s:
        state: present
        template: "{{ playbook_dir }}/deploy/crd-prometheusrules.yaml"
   
    - name: Deploy Grafana Agent
      kubernetes.core.k8s:
        state: present
        template: "{{ playbook_dir }}/deploy/grafana-agent.yaml"
        namespace: "{{ infra_namespace }}"
        
    - name: Generate an OpenSSH private key
      community.crypto.openssl_privatekey:
        path: "{{ playbook_dir }}/id_ssh_rsa"

    - name: Generate an OpenSSL public key in OpenSSH format
      community.crypto.openssl_publickey:
        format: OpenSSH
        path: "{{ playbook_dir }}/id_ssh_rsa.pub"
        privatekey_path: "{{ playbook_dir }}/id_ssh_rsa"

    - name: Create infra-mgr secret (private key)
      kubernetes.core.k8s:
        state: present
        template: "{{ playbook_dir }}/deploy/infra-mgr-secret.yaml"
        namespace: "{{ infra_namespace }}"

    - name: Create public key to infra-git
      kubernetes.core.k8s:
        state: present
        template: "{{ playbook_dir }}/deploy/keys-repo-configmap.yaml"
        namespace: "{{ infra_namespace }}"

    - name: Create infra-git persistent volume
      kubernetes.core.k8s:
        state: present
        template: "{{ playbook_dir }}/deploy/infra-repo-pv.yaml"
        namespace: "{{ infra_namespace }}"

    - name: Create Cassandra configmap
      kubernetes.core.k8s:
        state: present
        template: "{{ playbook_dir }}/deploy/cassandra/cassandra-configmap.yaml"
        namespace: "{{ infra_namespace }}"

    # - name: Cassandra Init
    #   kubernetes.core.k8s:
    #     state: present
    #     template: "{{ playbook_dir }}/deploy/cassandra/initdb.yaml"
    #     namespace: service

    - name: Deploy th2-infra
      kubernetes.core.helm:
        name: th2-infra
        chart_ref: "{{ playbook_dir }}/../chart/"
        release_namespace: "{{ infra_namespace }}"
        values_files:
          - "{{ playbook_dir }}/deploy/ci.values.yaml"
        values:
          infraOperator:
            config:
              chart:
                git: "{{ repository_url }}"
                ref: "{{ repository_ref }}"
                path: ./box-chart
        create_namespace: true
        wait: true
