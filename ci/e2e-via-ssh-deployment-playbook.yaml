---
- hosts: localhost
  gather_facts: false
  connection: local
  name: th2 deployment

  tasks:
    - name: Add helm repositories
      community.kubernetes.helm_repository:
        name: "{{ item.key }}"
        repo_url: "{{ item.value }}"
      with_dict:
        kubernetes-dashboard: https://kubernetes.github.io/dashboard/
        flux: https://charts.fluxcd.io
        ingress-nginx: https://kubernetes.github.io/ingress-nginx
        loki: https://grafana.github.io/loki/charts
        stable: https://charts.helm.sh/stable

    - name: Deploy kubernetes dashboard
      kubernetes.core.helm:
        name: dashboard
        chart_ref: kubernetes-dashboard/kubernetes-dashboard
        chart_version: 3.0.1
        release_namespace: monitoring
        values_files: "{{ playbook_dir }}/../example-values/dashboard.values.yaml"
        create_namespace: true
        wait: true

    - name: Deploy ingress-nginx controller
      kubernetes.core.helm:
        name: ingress
        chart_ref: ingress-nginx/ingress-nginx
        chart_version: 3.12.0
        release_namespace: service
        values_files: "{{ playbook_dir }}/../example-values/ingress.values.yaml"
        create_namespace: true
        wait: true

    - name: Deploy helm-operator
      kubernetes.core.helm:
        name: helm-operator
        chart_ref: flux/helm-operator
        chart_version: 1.2.0
        release_namespace: service
        values_files: "{{ playbook_dir }}/../example-values/helm-operator.values.yaml"
        create_namespace: true
        wait: true

    - name: Mocking prometheus operator
      kubernetes.core.k8s:
        definition: "{{ item }}"
      with_items: '{{ lookup("url", "https://raw.githubusercontent.com/helm/charts/master/stable/prometheus-operator/crds/crd-servicemonitor.yaml", split_lines=False) | from_yaml_all | list }}'

    - name: Generate an OpenSSH private key
      community.crypto.openssl_privatekey:
        path: "{{ playbook_dir }}/id_ssh_rsa"

    - name: Generate an OpenSSL public key in OpenSSH format
      community.crypto.openssl_publickey:
        format: OpenSSH
        path: "{{ playbook_dir }}/id_ssh_rsa.pub"
        privatekey_path: "{{ playbook_dir }}/id_ssh_rsa"

    - name: Create infra-mgr secret (private key)
      kubernetes.core.k8s:
        state: present
        template: "{{ playbook_dir }}/deploy/infra-mgr-secret.yaml"
        namespace: service

    - name: Create public key to infra-git
      kubernetes.core.k8s:
        state: present
        template: "{{ playbook_dir }}/deploy/keys-repo-configmap.yaml"
        namespace: service

    - name: Create infra-git persistent volume
      kubernetes.core.k8s:
        state: present
        template: "{{ playbook_dir }}/deploy/infra-repo-pv.yaml"
        namespace: service

    - name: Create Cassandra configmap
      kubernetes.core.k8s:
        state: present
        template: "{{ playbook_dir }}/deploy/cassandra/cassandra-configmap.yaml"
        namespace: service

    # - name: Cassandra Init
    #   kubernetes.core.k8s:
    #     state: present
    #     template: "{{ playbook_dir }}/deploy/cassandra/initdb.yaml"
    #     namespace: service

    - name: Deploy th2-infra
      kubernetes.core.helm:
        name: th2-infra
        chart_ref: "{{ playbook_dir }}/../th2-service/"
        release_namespace: service
        release_values:
          infraGit:
            internal: true
          externalRabbitMQHost:
            host: localhost
          rabbitmq:
            rabbitmqUser: th2
            rabbitmqPassword: test
            persistentVolume:
              enabled: false
          cassandra:
            # existingConfiguration: cassandra-configuration
            # initDBConfigMap: cassandra-init
            dbUser:
              user: cassandra
              password: cassandra
            host: cassandra-headless.service.svc.cluster.local
            jvm:
              maxHeapSize: 1G
              newHeapSize: 800M
            internal: true
          infraMgr:
            git:
              repository: ssh://git@infra-git/home/git/repo/e2e-test-schema.git
            resources:
              limits:
                cpu: 250m
          infraOperator:
            config:
              chart:
                git: https://github.com/th2-net/infra-operator-tpl.git
                ref: release-v0.7.1
                path: ./
        values_files:
          "{{ playbook_dir }}/../example-values/service.values.yaml"
          # - ./secrets.yaml
        create_namespace: true
        wait: true
